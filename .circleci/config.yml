predefined_branch_filter: &predefined_branch_filter
  filters:
    branches:
      only:
        - master
        - develop
        - /feature.*/
        - /bugfix.*/
docker_java_11: &docker_java_11
  docker:
    - image: cimg/openjdk:11.0.8-node
  environment:
    JVM_OPTS: -Xmx3200m
    TERM: dumb

version: 2.1
commands:
  build_service:
    parameters:
      serviceName:
        type: string
        default: "UndefinedParameterInPipeline"
      path:
        type: string
        default: "UndefinedParameterInPipeline"
    steps:
      - run:
          name: Inject Chassis version
          command: |
            VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
            cd ~/<< parameters.path >>
            echo "========Injecting Chassis version $VERSION========"
            mvn versions:update-parent "-DparentVersion=[$VERSION]" -DallowSnapshots=true -s /home/circleci/CHASSIS/.circleci/settings.xml
      - run:
          name: Check compatibility with service << parameters.serviceName >>
          command: |
            cd ~/<< parameters.path >>
            mvn test -s /home/circleci/CHASSIS/.circleci/settings.xml -B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
workflows:
  version: 2
  build-chassis:
    jobs:
      - build
      - check_services_approval:
          type: approval
          requires:
            - build
          <<: *predefined_branch_filter
      - build-base-image-approval:
          type: approval
          requires:
            - build
          <<: *predefined_branch_filter
      - deploy-to-nexus-approval:
          type: approval
          requires:
            - build
          filters:
            branches:
              only:
                - master
                - develop
      - config-server_check:
          requires:
            - check_services_approval
      - password-management_check:
          requires:
            - check_services_approval
      - account-management_check:
          requires:
            - check_services_approval
      - mail_check:
          requires:
            - check_services_approval
      - family-management_check:
          requires:
            - check_services_approval
      - budget-management_check:
          requires:
            - check_services_approval
      - mvc_check:
          requires:
            - check_services_approval
      - build-base-image:
          requires:
            - build-base-image-approval
      - deploy-to-nexus:
          requires:
            - deploy-to-nexus-approval
jobs:
  build:
    <<: *docker_java_11
    working_directory: ~/CHASSIS
    steps:
      - add_ssh_keys:
          fingerprints:
            - "5f:9d:14:91:16:7c:39:92:67:55:6d:78:65:7e:f4:64"
      - run:
          name: Clone Services
          command: |
            GIT_PARAMS="-q --depth 1 --single-branch --branch develop"
            SSH_PARAMS="-o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"
            GIT_SSH_COMMAND="ssh $SSH_PARAMS" git clone $GIT_PARAMS git@bitbucket.org:konradboniecki/config-server.git ~/configServerRepo
            GIT_SSH_COMMAND="ssh $SSH_PARAMS" git clone $GIT_PARAMS git@bitbucket.org:konradboniecki/password-management.git ~/passwordMgtRepo
            GIT_SSH_COMMAND="ssh $SSH_PARAMS" git clone $GIT_PARAMS git@bitbucket.org:konradboniecki/account-management.git ~/accountMgtRepo
            GIT_SSH_COMMAND="ssh $SSH_PARAMS" git clone $GIT_PARAMS git@bitbucket.org:konradboniecki/mail.git ~/mailRepo
            GIT_SSH_COMMAND="ssh $SSH_PARAMS" git clone $GIT_PARAMS git@bitbucket.org:konradboniecki/family-management.git ~/familyMgtRepo
            GIT_SSH_COMMAND="ssh $SSH_PARAMS" git clone $GIT_PARAMS git@bitbucket.org:konradboniecki/budget-management.git ~/budgetMgtRepo
            GIT_SSH_COMMAND="ssh $SSH_PARAMS" git clone $GIT_PARAMS git@bitbucket.org:konradboniecki/mvc.git ~/mvcRepo
      - checkout
      - restore_cache:
          keys:
            - m2-{{ checksum "pom.xml" }}
      - run:
          name: Set env
          command: |
            UUID=$(cat /proc/sys/kernel/random/uuid)
            VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
            NEW_VERSION=$VERSION-$UUID
            MVN_SET_VER_ARGS="-DnewVersion=$NEW_VERSION -B -s /home/circleci/CHASSIS/.circleci/settings.xml -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn"

            echo "export VERSION=$VERSION" >> $BASH_ENV
            echo "export NEW_VERSION=$NEW_VERSION" >> $BASH_ENV
            echo "export MVN_SET_VER_ARGS=$MVN_SET_VER_ARGS" >> $BASH_ENV
      - run:
          name: Install (to avoid issues with maven repo)
          command: |
            if [[ "$CIRCLE_BRANCH" == "feature/"* || "$CIRCLE_BRANCH" == "release/"* ]]; then
              mvn install -DskipTests=true
            fi
      - run:
          name: Update versions in root
          command: |
            if [[ "$CIRCLE_BRANCH" == "feature/"* ]]; then
              mvn versions:set $MVN_SET_VER_ARGS
              cat pom.xml
            fi
      - run:
          name: Update versions in chassis-settings
          command: |
            if [[ "$CIRCLE_BRANCH" == "feature/"* ]]; then
              mvn -f chassis-settings/pom.xml versions:set $MVN_SET_VER_ARGS
              mvn -f chassis-settings/pom.xml install
              cat chassis-settings/pom.xml
            fi
      - run:
          name: Update versions in chassis-test-tools
          command: |
            MVN_UPDATE_PARENT_ARGS="\"-DparentVersion=[$NEW_VERSION]\" -B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn"
            echo "var: $MVN_UPDATE_MODULE_PARENT_ARGS"
            if [[ "$CIRCLE_BRANCH" == "feature/"* ]]; then
              mvn -f chassis-test-tools/pom.xml versions:set $MVN_SET_VER_ARGS
              mvn -f chassis-test-tools/pom.xml versions:update-parent $MVN_UPDATE_PARENT_ARGS
              cat chassis-test-tools/pom.xml
            fi
      - run:
          name: Update versions in chassis-parent
          command: |
            MVN_UPDATE_PARENT_ARGS="\"-DparentVersion=[$NEW_VERSION]\" -B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn"
            echo "var: $MVN_UPDATE_PARENT_ARGS"
            if [[ "$CIRCLE_BRANCH" == "feature/"* ]]; then
              mvn -f chassis-parent/pom.xml versions:set $MVN_SET_VER_ARGS
              mvn -f chassis-parent/pom.xml versions:update-parent $MVN_UPDATE_PARENT_ARGS
              mvn -f chassis-parent/pom.xml install
              cat chassis-parent/pom.xml
            fi
      - run:
          name: Update versions in chassis-tools
          command: |
            MVN_UPDATE_PARENT_ARGS="\"-DparentVersion=[$NEW_VERSION]\" -B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn"
             echo "var: $MVN_UPDATE_PARENT_ARGS"
            if [[ "$CIRCLE_BRANCH" == "feature/"* ]]; then
              sed -i "s/$VERSION/$NEW_VERSION/" chassis-tools/pom.xml
              mvn -f chassis-tools/pom.xml versions:set $MVN_SET_VER_ARGS
              cat chassis-tools/pom.xml
            fi
      - run:
          name: Show effective pom
          command: |
            mvn -f chassis-parent/pom.xml help:effective-pom
      - persist_to_workspace:
          root: ~/
          paths:
            - configServerRepo
            - passwordMgtRepo
            - accountMgtRepo
            - mailRepo
            - familyMgtRepo
            - budgetMgtRepo
            - mvcRepo
            - CHASSIS
      - run:
          name: Build and run tests
          command: |
            mvn clean install -s .circleci/settings.xml -B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
      - run:
          name: Download all dependencies
          command: |
            VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
            MVN_GO_OFFLINE_ARGS="-s .circleci/settings.xml -B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn"
            MVN_UPDATE_PARENT_ARGS="\"-DparentVersion=[$VERSION]\"  -s /home/circleci/CHASSIS/.circleci/settings.xml -B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn"

            mvn versions:update-parent $MVN_UPDATE_PARENT_ARGS -f ~/configServerRepo/pom.xml
            mvn dependency:go-offline $MVN_GO_OFFLINE_ARGS -f ~/configServerRepo/pom.xml

            mvn versions:update-parent $MVN_UPDATE_PARENT_ARGS -f ~/passwordMgtRepo/pom.xml
            mvn dependency:go-offline $MVN_GO_OFFLINE_ARGS -f ~/passwordMgtRepo/pom.xml

            mvn versions:update-parent $MVN_UPDATE_PARENT_ARGS -f ~/accountMgtRepo/pom.xml
            mvn dependency:go-offline $MVN_GO_OFFLINE_ARGS -f ~/accountMgtRepo/pom.xml

            mvn versions:update-parent $MVN_UPDATE_PARENT_ARGS -f ~/mailRepo/pom.xml
            mvn dependency:go-offline $MVN_GO_OFFLINE_ARGS -f ~/mailRepo/pom.xml

            mvn versions:update-parent $MVN_UPDATE_PARENT_ARGS -f ~/familyMgtRepo/pom.xml
            mvn dependency:go-offline $MVN_GO_OFFLINE_ARGS -f ~/familyMgtRepo/pom.xml

            mvn versions:update-parent $MVN_UPDATE_PARENT_ARGS -f ~/mvcRepo/pom.xml
            mvn dependency:go-offline $MVN_GO_OFFLINE_ARGS -f ~/mvcRepo/pom.xml
      - save_cache:
          paths:
            - ~/.m2
          key: m2-{{ checksum "pom.xml" }}
      - store_test_results:
          path: chassis-test-tools/target/surefire-reports
      - store_artifacts:
          path: chassis-test-tools/target/surefire-reports/surefire-report.html
      - store_artifacts:
          path: chassis-test-tools/target/site/jacoco/
      - store_test_results:
          path: chassis-tools/target/surefire-reports
      - store_artifacts:
          path: chassis-tools/target/surefire-reports/surefire-report.html
      - store_artifacts:
          path: chassis-tools/target/site/jacoco/
  #_____________________________________________________________________________
  #_____________________________________________________________________________
  #_____________________________________________________________________________
  #_____________________________________________________________________________
  config-server_check:
    <<: *docker_java_11
    working_directory: ~/CHASSIS
    steps:
      - attach_workspace:
          at: ~/
      - restore_cache:
          keys:
            - m2-{{ checksum "pom.xml" }}
      - build_service:
          serviceName: "Config Server"
          path: "configServerRepo"
      - store_artifacts:
          path: ~/configServerRepo/target/surefire-reports
          destination: home/circleci/configServerRepo/surefire-reports
  password-management_check:
    <<: *docker_java_11
    working_directory: ~/CHASSIS
    steps:
      - attach_workspace:
          at: ~/
      - restore_cache:
          keys:
            - m2-{{ checksum "pom.xml" }}
      - build_service:
          serviceName: "Password Management"
          path: "passwordMgtRepo"
      - store_artifacts:
          path: ~/passwordMgtRepo/target/surefire-reports
          destination: home/circleci/passwordMgtRepo/surefire-reports
  account-management_check:
    <<: *docker_java_11
    working_directory: ~/CHASSIS
    steps:
      - attach_workspace:
          at: ~/
      - restore_cache:
          keys:
            - m2-{{ checksum "pom.xml" }}
      - build_service:
          serviceName: "Account Management"
          path: "accountMgtRepo"
      - store_artifacts:
          path: ~/accountMgtRepo/target/surefire-reports
          destination: home/circleci/accountMgtRepo/surefire-reports
  mail_check:
    <<: *docker_java_11
    working_directory: ~/CHASSIS
    steps:
      - attach_workspace:
          at: ~/
      - restore_cache:
          keys:
            - m2-{{ checksum "pom.xml" }}
      - build_service:
          serviceName: "Mail Service"
          path: "mailRepo"
      - store_artifacts:
          path: ~/mailRepo/target/surefire-reports
          destination: home/circleci/mailRepo/surefire-reports
  family-management_check:
    <<: *docker_java_11
    working_directory: ~/CHASSIS
    steps:
      - attach_workspace:
          at: ~/
      - restore_cache:
          keys:
            - m2-{{ checksum "pom.xml" }}
      - build_service:
          serviceName: "Family management"
          path: "familyMgtRepo"
      - store_artifacts:
          path: ~/familyMgtRepo/target/surefire-reports
          destination: home/circleci/familyMgtRepo/surefire-reports
  budget-management_check:
    <<: *docker_java_11
    working_directory: ~/CHASSIS
    steps:
      - attach_workspace:
          at: ~/
      - restore_cache:
          keys:
            - m2-{{ checksum "pom.xml" }}
      - build_service:
          serviceName: "Budget management"
          path: "budgetMgtRepo"
      - store_artifacts:
          path: ~/budgetMgtRepo/target/surefire-reports
          destination: home/circleci/budgetMgtRepo/surefire-reports
  mvc_check:
    <<: *docker_java_11
    working_directory: ~/CHASSIS
    steps:
      - attach_workspace:
          at: ~/
      - restore_cache:
          keys:
            - m2-{{ checksum "pom.xml" }}
      - build_service:
          serviceName: "Mvc"
          path: "mvcRepo"
      - store_artifacts:
          path: ~/mvcRepo/target/surefire-reports
          destination: home/circleci/mvcRepo/surefire-reports
  #_____________________________________________________________________________
  #_____________________________________________________________________________
  #_____________________________________________________________________________
  #_____________________________________________________________________________
  deploy-to-nexus:
    <<: *docker_java_11
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - m2-{{ checksum "pom.xml" }}
      - run:
          name: Deploy artifacts to nexus
          command: |
            mvn deploy -s .circleci/settings.xml -DskipTests=true

  build-base-image:
    <<: *docker_java_11
    working_directory: ~/repo
    steps:
      - setup_remote_docker:
          version: 18.06.0-ce
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - "5f:9d:14:91:16:7c:39:92:67:55:6d:78:65:7e:f4:64"
      - checkout
      - run:
          name: Build and push docker image
          command: |
            TAG=java-base-image-$CIRCLE_BUILD_NUM
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker build -t konradboniecki/budget:$TAG .
            docker push konradboniecki/budget:$TAG

