master_branch_filter: &master_branch_filter
  filters:
    branches:
      only:
        - master
feature_bugfix_filter: &feature_bugfix_filter
  filters:
    branches:
      only:
        - /feature.*/
        - /bugfix.*/
docker_java_17: &docker_java_17
  docker:
    - image: cimg/openjdk:17.0.2-node
  environment:
    JVM_OPTS: -Xmx3200m
    TERM: dumb

version: 2.1
commands:
  build_service:
    parameters:
      serviceName:
        type: string
        default: "UndefinedParameterInPipeline"
      path:
        type: string
        default: "UndefinedParameterInPipeline"
      module:
        type: string
        default: "UndefinedParameterInPipeline"
      rootModuleOnly:
        type: string
        default: "false"
    steps:
      - run:
          name: Inject Chassis version
          command: |
            VERSION=$(./mvnw help:evaluate -Dexpression=project.version -q -DforceStdout)
            cd ~/<< parameters.path >>
            echo "========Injecting Chassis version $VERSION========"
            ./mvnw versions:update-parent "-DparentVersion=[$VERSION]" -DallowSnapshots=true -s /home/circleci/CHASSIS/.circleci/settings.xml
            if [ << parameters.rootModuleOnly >> -e "false" ]; then
            cd << parameters.module >>
            ./mvnw versions:update-parent "-DparentVersion=[$VERSION]" -DallowSnapshots=true -s /home/circleci/CHASSIS/.circleci/settings.xml
            fi
      - run:
          name: Show effective pom
          command: |
            cd ~/<< parameters.path >>
            if [ << parameters.rootModuleOnly >> -e "false" ]; then
            cd << parameters.module >>
            ./mvnw help:effective-pom
            fi
      - run:
          name: Check compatibility with service << parameters.serviceName >>
          command: |
            cd ~/<< parameters.path >>
            ./mvnw test -s /home/circleci/CHASSIS/.circleci/settings.xml -B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
workflows:
  version: 2
  build-and-test:
    jobs:
      - build
      #      - sonar-scanning:
      #          context: SonarCloud
      - build-base-image:
          requires:
            - build
          <<: *master_branch_filter
  release:
    jobs:
      - deploy-to-nexus:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v([0-9]{1,4}\.){2}[0-9]{1,4}$/
jobs:
  build:
    <<: *docker_java_17
    working_directory: ~/CHASSIS
    steps:
      - add_ssh_keys:
          fingerprints:
            - "5f:9d:14:91:16:7c:39:92:67:55:6d:78:65:7e:f4:64"
      - checkout
      - restore_cache:
          keys:
            - m2-{{ checksum "pom.xml" }}
      - run:
          name: Show effective pom
          command: |
            ./mvnw -f chassis-parent/pom.xml help:effective-pom
      - persist_to_workspace:
          root: ~/
          paths:
            - CHASSIS
      - run:
          name: Build and run tests
          command: |
            ./mvnw clean install -s .circleci/settings.xml -B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
      - save_cache:
          paths:
            - ~/.m2
          key: m2-{{ checksum "pom.xml" }}
      - store_test_results:
          path: chassis-tools-test/target/surefire-reports
      - store_artifacts:
          path: chassis-tools-test/target/surefire-reports/surefire-report.html
      - store_artifacts:
          path: chassis-tools-test/target/site/jacoco/
      - store_test_results:
          path: chassis-tools/target/surefire-reports
      - store_artifacts:
          path: chassis-tools/target/surefire-reports/surefire-report.html
      - store_artifacts:
          path: chassis-tools/target/site/jacoco/
  #_____________________________________________________________________________
  #_____________________________________________________________________________
  #_____________________________________________________________________________
  sonar-scanning:
    <<: *docker_java_17
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - m2-{{ checksum "pom.xml" }}
      - run:
          name: Analyze on SonarCloud
          command: ./mvnw verify sonar:sonar -s .circleci/settings.xml
  deploy-to-nexus:
    <<: *docker_java_17
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - m2-{{ checksum "pom.xml" }}
      - run:
          name: Deploy artifacts to nexus
          command: |
            ./mvnw deploy -s .circleci/settings.xml -DskipTests=true

  build-base-image:
    <<: *docker_java_17
    working_directory: ~/repo
    steps:
      - setup_remote_docker:
          version: default
          docker_layer_caching: true
      - add_ssh_keys:
          fingerprints:
            - "5f:9d:14:91:16:7c:39:92:67:55:6d:78:65:7e:f4:64"
      - checkout
      - run:
          name: Build and push docker image
          command: |
            TAG=java-base-image-latest
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker build -t konradboniecki/budget:$TAG .
            docker push konradboniecki/budget:$TAG

